{"remainingRequest":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\src\\components\\common\\Editor.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\src\\components\\common\\Editor.vue","mtime":1734260160425},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8vIOW3peWFt+agj+mFjee9rgpjb25zdCB0b29sYmFyT3B0aW9ucyA9IFsKICBbImJvbGQiLCAiaXRhbGljIiwgInVuZGVybGluZSIsICJzdHJpa2UiXSwgLy8g5Yqg57KXIOaWnOS9kyDkuIvliJLnur8g5Yig6Zmk57q/CiAgWyJibG9ja3F1b3RlIiwgImNvZGUtYmxvY2siXSwgLy8g5byV55SoICDku6PnoIHlnZcKICBbeyBoZWFkZXI6IDEgfSwgeyBoZWFkZXI6IDIgfV0sIC8vIDHjgIEyIOe6p+agh+mimAogIFt7IGxpc3Q6ICJvcmRlcmVkIiB9LCB7IGxpc3Q6ICJidWxsZXQiIH1dLCAvLyDmnInluo/jgIHml6Dluo/liJfooagKICBbeyBzY3JpcHQ6ICJzdWIiIH0sIHsgc2NyaXB0OiAic3VwZXIiIH1dLCAvLyDkuIrmoIcv5LiL5qCHCiAgW3sgaW5kZW50OiAiLTEiIH0sIHsgaW5kZW50OiAiKzEiIH1dLCAvLyDnvKnov5sKICAvLyBbeydkaXJlY3Rpb24nOiAncnRsJ31dLCAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmlofmnKzmlrnlkJEKICBbeyBzaXplOiBbInNtYWxsIiwgZmFsc2UsICJsYXJnZSIsICJodWdlIl0gfV0sIC8vIOWtl+S9k+Wkp+WwjwogIFt7IGhlYWRlcjogWzEsIDIsIDMsIDQsIDUsIDYsIGZhbHNlXSB9XSwgLy8g5qCH6aKYCiAgW3sgY29sb3I6IFtdIH0sIHsgYmFja2dyb3VuZDogW10gfV0sIC8vIOWtl+S9k+minOiJsuOAgeWtl+S9k+iDjOaZr+minOiJsgogIFt7IGZvbnQ6IFtdIH1dLCAvLyDlrZfkvZPnp43nsbsKICBbeyBhbGlnbjogW10gfV0sIC8vIOWvuem9kOaWueW8jwogIFsiY2xlYW4iXSwgLy8g5riF6Zmk5paH5pys5qC85byPCiAgWyJpbWFnZSJdIC8vIOWbvueJhwpdOwoKaW1wb3J0IHsgcXVpbGxFZGl0b3IgfSBmcm9tICJ2dWUtcXVpbGwtZWRpdG9yIjsKaW1wb3J0ICJxdWlsbC9kaXN0L3F1aWxsLmNvcmUuY3NzIjsKaW1wb3J0ICJxdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzIjsKaW1wb3J0ICJxdWlsbC9kaXN0L3F1aWxsLmJ1YmJsZS5jc3MiOwoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICAvKue8lui+keWZqOeahOWGheWuuSovCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBhY3Rpb246IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgLyrlm77niYflpKflsI8qLwogICAgbWF4U2l6ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDQwMDAgLy9rYgogICAgfQogIH0sCgogIGNvbXBvbmVudHM6IHsKICAgIHF1aWxsRWRpdG9yCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6ICIiLAogICAgICBxdWlsbFVwZGF0ZUltZzogZmFsc2UsIC8vIOagueaNruWbvueJh+S4iuS8oOeKtuaAgeadpeehruWumuaYr+WQpuaYvuekumxvYWRpbmfliqjnlLvvvIzliJrlvIDlp4vmmK9mYWxzZSzkuI3mmL7npLoKICAgICAgZWRpdG9yT3B0aW9uOiB7CiAgICAgICAgcGxhY2Vob2xkZXI6ICIiLAogICAgICAgIHRoZW1lOiAic25vdyIsIC8vIG9yICdidWJibGUnCiAgICAgICAgbW9kdWxlczogewogICAgICAgICAgdG9vbGJhcjogewogICAgICAgICAgICBjb250YWluZXI6IHRvb2xiYXJPcHRpb25zLAogICAgICAgICAgICAvLyBjb250YWluZXI6ICIjdG9vbGJhciIsCiAgICAgICAgICAgIGhhbmRsZXJzOiB7CiAgICAgICAgICAgICAgaW1hZ2U6IGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgICAgICAgICAgICBpZiAodmFsdWUpIHsKICAgICAgICAgICAgICAgICAgLy8g6Kem5Y+RaW5wdXTmoYbpgInmi6nlm77niYfmlofku7YKICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmF2YXRhci11cGxvYWRlciBpbnB1dCIpLmNsaWNrKCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgiaW1hZ2UiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vIGxpbms6IGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgICAgICAgICAgLy8gICBpZiAodmFsdWUpIHsKICAgICAgICAgICAgICAvLyAgICAgdmFyIGhyZWYgPSBwcm9tcHQoJ+ivt+i+k+WFpXVybCcpOwogICAgICAgICAgICAgIC8vICAgICB0aGlzLnF1aWxsLmZvcm1hdCgibGluayIsIGhyZWYpOwogICAgICAgICAgICAgIC8vICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyAgICAgdGhpcy5xdWlsbC5mb3JtYXQoImxpbmsiLCBmYWxzZSk7CiAgICAgICAgICAgICAgLy8gICB9CiAgICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgLy8gc2VydmVyVXJsOiBgJHtiYXNlLnVybH1zeXMvc3RvcmFnZS91cGxvYWRTd2lwZXI/dG9rZW49JHtzdG9yYWdlLmdldCgndG9rZW4nKX1gLCAvLyDov5nph4zlhpnkvaDopoHkuIrkvKDnmoTlm77niYfmnI3liqHlmajlnLDlnYAKICAgICAgaGVhZGVyOiB7CiAgICAgICAgLy8gdG9rZW46IHNlc3Npb25TdG9yYWdlLnRva2VuCiAgICAgICAnVG9rZW4nOiB0aGlzLiRzdG9yYWdlLmdldCgiVG9rZW4iKQogICAgICB9IC8vIOacieeahOWbvueJh+acjeWKoeWZqOimgeaxguivt+axguWktOmcgOimgeaciXRva2VuCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOiuoeeul+WxnuaAp+eahCBnZXR0ZXIKICAgIGdldEFjdGlvblVybDogZnVuY3Rpb24oKSB7CiAgICAgIC8vIHJldHVybiB0aGlzLiRiYXNlLnVybCArIHRoaXMuYWN0aW9uICsgIj90b2tlbj0iICsgdGhpcy4kc3RvcmFnZS5nZXQoInRva2VuIik7CgkgIHRoaXMuc2V0Q29udGVudCh0aGlzLnZhbHVlKTsKICAgICAgcmV0dXJuIGAvJHt0aGlzLiRiYXNlLm5hbWV9L2AgKyB0aGlzLmFjdGlvbjsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldENvbnRlbnQodmFsdWUpIHsKICAgICAgICB0aGlzLmNvbnRlbnQgPSB2YWx1ZTsKICAgIH0sCiAgICBvbkVkaXRvckJsdXIoKSB7CiAgICAgIC8v5aSx5Y6754Sm54K55LqL5Lu2CiAgICB9LAogICAgb25FZGl0b3JGb2N1cygpIHsKICAgICAgLy/ojrflvpfnhKbngrnkuovku7YKICAgIH0sCiAgICBvbkVkaXRvckNoYW5nZSgpIHsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5jb250ZW50KTsKICAgICAgLy8g5YaF5a655pS55Y+Y5LqL5Lu2CiAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgdGhpcy5jb250ZW50KTsKICAgIH0sCiAgICAvLyDlr4zmlofmnKzlm77niYfkuIrkvKDliY0KICAgIGJlZm9yZVVwbG9hZCgpIHsKICAgICAgLy8g5pi+56S6bG9hZGluZ+WKqOeUuwogICAgICB0aGlzLnF1aWxsVXBkYXRlSW1nID0gdHJ1ZTsKICAgIH0sCgogICAgdXBsb2FkU3VjY2VzcyhyZXMsIGZpbGUpIHsKICAgICAgLy8gcmVz5Li65Zu+54mH5pyN5Yqh5Zmo6L+U5Zue55qE5pWw5o2uCiAgICAgIC8vIOiOt+WPluWvjOaWh+acrOe7hOS7tuWunuS+iwogICAgICBsZXQgcXVpbGwgPSB0aGlzLiRyZWZzLm15UXVpbGxFZGl0b3IucXVpbGw7CiAgICAgIC8vIOWmguaenOS4iuS8oOaIkOWKnwogICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAgICAgICAvLyDojrflj5blhYnmoIfmiYDlnKjkvY3nva4KICAgICAgICBsZXQgbGVuZ3RoID0gcXVpbGwuZ2V0U2VsZWN0aW9uKCkuaW5kZXg7CiAgICAgICAgLy8g5o+S5YWl5Zu+54mHICByZXMudXJs5Li65pyN5Yqh5Zmo6L+U5Zue55qE5Zu+54mH5Zyw5Z2ACiAgICAgICAgcXVpbGwuaW5zZXJ0RW1iZWQobGVuZ3RoLCAiaW1hZ2UiLCB0aGlzLiRiYXNlLnVybCsgInVwbG9hZC8iICtyZXMuZmlsZSk7CiAgICAgICAgLy8g6LCD5pW05YWJ5qCH5Yiw5pyA5ZCOCiAgICAgICAgcXVpbGwuc2V0U2VsZWN0aW9uKGxlbmd0aCArIDEpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuWbvueJh+aPkuWFpeWksei0pSIpOwogICAgICB9CiAgICAgIC8vIGxvYWRpbmfliqjnlLvmtojlpLEKICAgICAgdGhpcy5xdWlsbFVwZGF0ZUltZyA9IGZhbHNlOwogICAgfSwKICAgIC8vIOWvjOaWh+acrOWbvueJh+S4iuS8oOWksei0pQogICAgdXBsb2FkRXJyb3IoKSB7CiAgICAgIC8vIGxvYWRpbmfliqjnlLvmtojlpLEKICAgICAgdGhpcy5xdWlsbFVwZGF0ZUltZyA9IGZhbHNlOwogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLlm77niYfmj5LlhaXlpLHotKUiKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Editor.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n  <div>\n    <!-- 图片上传组件辅助-->\n    <el-upload\n      class=\"avatar-uploader\"\n      :action=\"getActionUrl\"\n      name=\"file\"\n      :headers=\"header\"\n      :show-file-list=\"false\"\n      :on-success=\"uploadSuccess\"\n      :on-error=\"uploadError\"\n      :before-upload=\"beforeUpload\"\n    ></el-upload>\n\n    <quill-editor\n      class=\"editor\"\n      v-model=\"content\"\n      ref=\"myQuillEditor\"\n      :options=\"editorOption\"\n      @blur=\"onEditorBlur($event)\"\n      @focus=\"onEditorFocus($event)\"\n      @change=\"onEditorChange($event)\"\n    ></quill-editor>\n  </div>\n</template>\n<script>\n// 工具栏配置\nconst toolbarOptions = [\n  [\"bold\", \"italic\", \"underline\", \"strike\"], // 加粗 斜体 下划线 删除线\n  [\"blockquote\", \"code-block\"], // 引用  代码块\n  [{ header: 1 }, { header: 2 }], // 1、2 级标题\n  [{ list: \"ordered\" }, { list: \"bullet\" }], // 有序、无序列表\n  [{ script: \"sub\" }, { script: \"super\" }], // 上标/下标\n  [{ indent: \"-1\" }, { indent: \"+1\" }], // 缩进\n  // [{'direction': 'rtl'}],                         // 文本方向\n  [{ size: [\"small\", false, \"large\", \"huge\"] }], // 字体大小\n  [{ header: [1, 2, 3, 4, 5, 6, false] }], // 标题\n  [{ color: [] }, { background: [] }], // 字体颜色、字体背景颜色\n  [{ font: [] }], // 字体种类\n  [{ align: [] }], // 对齐方式\n  [\"clean\"], // 清除文本格式\n  [\"image\"] // 图片\n];\n\nimport { quillEditor } from \"vue-quill-editor\";\nimport \"quill/dist/quill.core.css\";\nimport \"quill/dist/quill.snow.css\";\nimport \"quill/dist/quill.bubble.css\";\n\nexport default {\n  props: {\n    /*编辑器的内容*/\n    value: {\n      type: String\n    },\n    action: {\n      type: String\n    },\n    /*图片大小*/\n    maxSize: {\n      type: Number,\n      default: 4000 //kb\n    }\n  },\n\n  components: {\n    quillEditor\n  },\n\n  data() {\n    return {\n      content: \"\",\n      quillUpdateImg: false, // 根据图片上传状态来确定是否显示loading动画，刚开始是false,不显示\n      editorOption: {\n        placeholder: \"\",\n        theme: \"snow\", // or 'bubble'\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            // container: \"#toolbar\",\n            handlers: {\n              image: function(value) {\n                if (value) {\n                  // 触发input框选择图片文件\n                  document.querySelector(\".avatar-uploader input\").click();\n                } else {\n                  this.quill.format(\"image\", false);\n                }\n              }\n              // link: function(value) {\n              //   if (value) {\n              //     var href = prompt('请输入url');\n              //     this.quill.format(\"link\", href);\n              //   } else {\n              //     this.quill.format(\"link\", false);\n              //   }\n              // },\n            }\n          }\n        }\n      },\n      // serverUrl: `${base.url}sys/storage/uploadSwiper?token=${storage.get('token')}`, // 这里写你要上传的图片服务器地址\n      header: {\n        // token: sessionStorage.token\n       'Token': this.$storage.get(\"Token\")\n      } // 有的图片服务器要求请求头需要有token\n    };\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function() {\n      // return this.$base.url + this.action + \"?token=\" + this.$storage.get(\"token\");\n\t  this.setContent(this.value);\n      return `/${this.$base.name}/` + this.action;\n    }\n  },\n  methods: {\n    setContent(value) {\n        this.content = value;\n    },\n    onEditorBlur() {\n      //失去焦点事件\n    },\n    onEditorFocus() {\n      //获得焦点事件\n    },\n    onEditorChange() {\n      // console.log(this.content);\n      // 内容改变事件\n      this.$emit(\"input\", this.content);\n    },\n    // 富文本图片上传前\n    beforeUpload() {\n      // 显示loading动画\n      this.quillUpdateImg = true;\n    },\n\n    uploadSuccess(res, file) {\n      // res为图片服务器返回的数据\n      // 获取富文本组件实例\n      let quill = this.$refs.myQuillEditor.quill;\n      // 如果上传成功\n      if (res.code === 0) {\n        // 获取光标所在位置\n        let length = quill.getSelection().index;\n        // 插入图片  res.url为服务器返回的图片地址\n        quill.insertEmbed(length, \"image\", this.$base.url+ \"upload/\" +res.file);\n        // 调整光标到最后\n        quill.setSelection(length + 1);\n      } else {\n        this.$message.error(\"图片插入失败\");\n      }\n      // loading动画消失\n      this.quillUpdateImg = false;\n    },\n    // 富文本图片上传失败\n    uploadError() {\n      // loading动画消失\n      this.quillUpdateImg = false;\n      this.$message.error(\"图片插入失败\");\n    }\n  }\n};\n</script> \n\n<style>\n.editor {\n  line-height: normal !important;\n}\n.ql-snow .ql-tooltip[data-mode=\"link\"]::before {\n  content: \"请输入链接地址:\";\n}\n.ql-snow .ql-tooltip.ql-editing a.ql-action::after {\n  border-right: 0px;\n  content: \"保存\";\n  padding-right: 0px;\n}\n\n.ql-snow .ql-tooltip[data-mode=\"video\"]::before {\n  content: \"请输入视频地址:\";\n}\n.ql-container {\n\theight: 400px;\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n  content: \"14px\";\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=\"small\"]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"small\"]::before {\n  content: \"10px\";\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=\"large\"]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"large\"]::before {\n  content: \"18px\";\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=\"huge\"]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"huge\"]::before {\n  content: \"32px\";\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item::before {\n  content: \"文本\";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\n  content: \"标题1\";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\n  content: \"标题2\";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\n  content: \"标题3\";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\n  content: \"标题4\";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"5\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before {\n  content: \"标题5\";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"6\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before {\n  content: \"标题6\";\n}\n\n.ql-snow .ql-picker.ql-font .ql-picker-label::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item::before {\n  content: \"标准字体\";\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=\"serif\"]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=\"serif\"]::before {\n  content: \"衬线字体\";\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=\"monospace\"]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=\"monospace\"]::before {\n  content: \"等宽字体\";\n}\n</style>"]}]}