{"remainingRequest":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\forum\\list.vue?vue&type=template&id=f984ae20&scoped=true","dependencies":[{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\forum\\list.vue","mtime":1734260160466},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\User\\Desktop\\task_1.0\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}